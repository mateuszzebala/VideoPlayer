{"ast":null,"code":"var _jsxFileName = \"/home/mateusz/Code/React/VideoPlayer/src/components/video/settings/settings-element.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { ICONS } from \"../../../icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction SettingsElement(props) {\n  _s();\n  const [show, setShow] = useState(false);\n  function toggleShow() {\n    setShow(!show);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleShow,\n      children: props.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settings-elem\",\n      style: {\n        transform: show ? \"translate(0, 0)\" : \"translate(100%, 0)\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"menu\",\n        children: props.children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleShow,\n        className: \"exit\",\n        children: ICONS.XMARK\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n}\n_s(SettingsElement, \"NKb1ZOdhT+qUsWLXSgjSS2bk2C4=\");\n_c = SettingsElement;\nexport default SettingsElement;\nvar _c;\n$RefreshReg$(_c, \"SettingsElement\");","map":{"version":3,"names":["useState","ICONS","SettingsElement","props","show","setShow","toggleShow","name","transform","children","XMARK"],"sources":["/home/mateusz/Code/React/VideoPlayer/src/components/video/settings/settings-element.js"],"sourcesContent":["import {useState} from \"react\";\r\nimport {ICONS} from \"../../../icons\";\r\n\r\nfunction SettingsElement(props){\r\n    const [show, setShow] = useState(false)\r\n\r\n    function toggleShow(){\r\n        setShow(!show)\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n                <button onClick={toggleShow}>{props.name}</button>\r\n                <div className=\"settings-elem\" style={{transform: show ? \"translate(0, 0)\" : \"translate(100%, 0)\"}}>\r\n                    <div className=\"menu\">\r\n                        {props.children}\r\n                    </div>\r\n                    <button onClick={toggleShow} className={\"exit\"}>{ICONS.XMARK}</button>\r\n                </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SettingsElement"],"mappings":";;AAAA,SAAQA,QAAQ,QAAO,OAAO;AAC9B,SAAQC,KAAK,QAAO,gBAAgB;AAAC;AAAA;AAErC,SAASC,eAAe,CAACC,KAAK,EAAC;EAAA;EAC3B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGL,QAAQ,CAAC,KAAK,CAAC;EAEvC,SAASM,UAAU,GAAE;IACjBD,OAAO,CAAC,CAACD,IAAI,CAAC;EAClB;EAEA,oBACI;IAAA,wBAEQ;MAAQ,OAAO,EAAEE,UAAW;MAAA,UAAEH,KAAK,CAACI;IAAI;MAAA;MAAA;MAAA;IAAA,QAAU,eAClD;MAAK,SAAS,EAAC,eAAe;MAAC,KAAK,EAAE;QAACC,SAAS,EAAEJ,IAAI,GAAG,iBAAiB,GAAG;MAAoB,CAAE;MAAA,wBAC/F;QAAK,SAAS,EAAC,MAAM;QAAA,UAChBD,KAAK,CAACM;MAAQ;QAAA;QAAA;QAAA;MAAA,QACb,eACN;QAAQ,OAAO,EAAEH,UAAW;QAAC,SAAS,EAAE,MAAO;QAAA,UAAEL,KAAK,CAACS;MAAK;QAAA;QAAA;QAAA;MAAA,QAAU;IAAA;MAAA;MAAA;MAAA;IAAA,QACpE;EAAA,gBACX;AAEX;AAAC,GAnBQR,eAAe;AAAA,KAAfA,eAAe;AAqBxB,eAAeA,eAAe;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}