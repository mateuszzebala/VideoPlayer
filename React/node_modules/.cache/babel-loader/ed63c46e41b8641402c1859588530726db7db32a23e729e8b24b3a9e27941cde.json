{"ast":null,"code":"import axios from \"axios\";\nimport { API_URL, API } from \"./api\";\nasync function $POST(url) {\n  let data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  let dt = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  let args = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  let get_arguments = \"?\";\n  Object.keys(args).map(key => {\n    get_arguments += `${key}=${args[key]}&`;\n  });\n  if (get_arguments.at(-1) === \"&\") {\n    get_arguments = get_arguments.slice(0, -1);\n  }\n  return await axios.post(url + (get_arguments !== \"?\" ? get_arguments : \"\"), data, {\n    headers: {\n      \"Content-Type\": \"multipart/form-data\",\n      'X-Csrftoken': await $csrf()\n    },\n    withCredentials: true,\n    dataTransfer: dt !== null ? dt : \"\"\n  });\n}\nlet _csrfToken = null;\nasync function $csrf() {\n  const response = await axios.post(API.CSRF, {}, {\n    withCredentials: true,\n    responseType: 'json'\n  });\n  const data = await response.data;\n  _csrfToken = data.token;\n  return _csrfToken;\n}\nasync function $me() {\n  const response = await $POST(API.ME);\n  return response.data;\n}\nasync function $AmILoggedIn() {\n  let ret;\n  await $POST(API.ME).then(res => {\n    ret = res.data.login === true;\n  });\n  return ret;\n}\nexport { $POST, $csrf, $me, $AmILoggedIn };","map":{"version":3,"names":["axios","API_URL","API","$POST","url","data","dt","args","get_arguments","Object","keys","map","key","at","slice","post","headers","$csrf","withCredentials","dataTransfer","_csrfToken","response","CSRF","responseType","token","$me","ME","$AmILoggedIn","ret","then","res","login"],"sources":["/home/mateusz/Code/React/VideoPlayer/src/utils.js"],"sourcesContent":["import axios from \"axios\";\r\nimport {API_URL, API} from \"./api\";\r\n\r\nasync function $POST(url, data={}, dt=null, args={}){\r\n    let get_arguments = \"?\"\r\n    Object.keys(args).map(key=>{\r\n        get_arguments += `${key}=${args[key]}&`\r\n    })\r\n    if(get_arguments.at(-1) === \"&\"){\r\n        get_arguments = get_arguments.slice(0, -1)\r\n    }\r\n    return await axios.post(url + (get_arguments !== \"?\" ? get_arguments : \"\"), data, {\r\n        headers: {\r\n            \"Content-Type\": \"multipart/form-data\",\r\n            'X-Csrftoken': await $csrf(),\r\n        },\r\n        withCredentials: true,\r\n        dataTransfer: dt !== null ? dt : \"\",\r\n\r\n    })\r\n}\r\n\r\nlet _csrfToken = null;\r\nasync function $csrf() {\r\n    const response = await axios.post(API.CSRF, {}, {\r\n      withCredentials: true,\r\n      responseType: 'json',\r\n    });\r\n    const data = await response.data;\r\n    _csrfToken = data.token;\r\n\r\n  return _csrfToken;\r\n}\r\n\r\nasync function $me() {\r\n  const response = await $POST(API.ME);\r\n  return response.data;\r\n}\r\n\r\nasync function $AmILoggedIn(){\r\n    let ret\r\n   await $POST(API.ME).then(res=>{\r\n        ret = res.data.login === true\r\n    })\r\n    return ret\r\n\r\n}\r\n\r\nexport {$POST, $csrf, $me, $AmILoggedIn}\r\n\r\n\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,OAAO,EAAEC,GAAG,QAAO,OAAO;AAElC,eAAeC,KAAK,CAACC,GAAG,EAA4B;EAAA,IAA1BC,IAAI,uEAAC,CAAC,CAAC;EAAA,IAAEC,EAAE,uEAAC,IAAI;EAAA,IAAEC,IAAI,uEAAC,CAAC,CAAC;EAC/C,IAAIC,aAAa,GAAG,GAAG;EACvBC,MAAM,CAACC,IAAI,CAACH,IAAI,CAAC,CAACI,GAAG,CAACC,GAAG,IAAE;IACvBJ,aAAa,IAAK,GAAEI,GAAI,IAAGL,IAAI,CAACK,GAAG,CAAE,GAAE;EAC3C,CAAC,CAAC;EACF,IAAGJ,aAAa,CAACK,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,EAAC;IAC5BL,aAAa,GAAGA,aAAa,CAACM,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EAC9C;EACA,OAAO,MAAMd,KAAK,CAACe,IAAI,CAACX,GAAG,IAAII,aAAa,KAAK,GAAG,GAAGA,aAAa,GAAG,EAAE,CAAC,EAAEH,IAAI,EAAE;IAC9EW,OAAO,EAAE;MACL,cAAc,EAAE,qBAAqB;MACrC,aAAa,EAAE,MAAMC,KAAK;IAC9B,CAAC;IACDC,eAAe,EAAE,IAAI;IACrBC,YAAY,EAAEb,EAAE,KAAK,IAAI,GAAGA,EAAE,GAAG;EAErC,CAAC,CAAC;AACN;AAEA,IAAIc,UAAU,GAAG,IAAI;AACrB,eAAeH,KAAK,GAAG;EACnB,MAAMI,QAAQ,GAAG,MAAMrB,KAAK,CAACe,IAAI,CAACb,GAAG,CAACoB,IAAI,EAAE,CAAC,CAAC,EAAE;IAC9CJ,eAAe,EAAE,IAAI;IACrBK,YAAY,EAAE;EAChB,CAAC,CAAC;EACF,MAAMlB,IAAI,GAAG,MAAMgB,QAAQ,CAAChB,IAAI;EAChCe,UAAU,GAAGf,IAAI,CAACmB,KAAK;EAEzB,OAAOJ,UAAU;AACnB;AAEA,eAAeK,GAAG,GAAG;EACnB,MAAMJ,QAAQ,GAAG,MAAMlB,KAAK,CAACD,GAAG,CAACwB,EAAE,CAAC;EACpC,OAAOL,QAAQ,CAAChB,IAAI;AACtB;AAEA,eAAesB,YAAY,GAAE;EACzB,IAAIC,GAAG;EACR,MAAMzB,KAAK,CAACD,GAAG,CAACwB,EAAE,CAAC,CAACG,IAAI,CAACC,GAAG,IAAE;IACzBF,GAAG,GAAGE,GAAG,CAACzB,IAAI,CAAC0B,KAAK,KAAK,IAAI;EACjC,CAAC,CAAC;EACF,OAAOH,GAAG;AAEd;AAEA,SAAQzB,KAAK,EAAEc,KAAK,EAAEQ,GAAG,EAAEE,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}